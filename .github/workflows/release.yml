name: Release

on:
  push:
    paths:
      - '**/src/**'
    branches:
      - master
  workflow_dispatch:
    inputs:
      version:
        required: false
        description: Package version to publish under
      skipPages:
        description: Should we skip releasing GitHub pages
        required: false
        default: "y"
      skipMavenCentral:
        description: Should we skip publishing artefacts to Maven Central
        required: false
        default: "y"
      skipGitHub:
        description: Should we skip publishing artefacts to GitHub Packages
        required: false
        default: "y"
  release:
    types: [ created ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=true"

concurrency:
  cancel-in-progress: false
  group: release-${{ github.workflow }}-${{ github.head_ref || github.ref }}

jobs:
  check:
    uses: ./.github/workflows/check.yml

  resolve-version:
    uses: ./.github/workflows/resolve-version.yml
    needs: [ check ]
    with:
      desired-version: ${{ github.event.release.tag_name || github.event.inputs.version }}

  build-dokka:
    name: Build Dokka
    needs:
      - check
      - resolve-version
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.resolve-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Restore Gradle cache
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Gradle Assemble Dokka
        run: ./gradlew dokkaHtmlMultiModule -Pversion=${VERSION//v} --scan

      - uses: actions/upload-artifact@v3
        with:
          name: dokka
          path: |
            **/build/dokka

  release-Artefacts:
    name: Release to ${{ matrix.repository.name }} on ${{ matrix.os.runner }}
    runs-on: ${{ matrix.os.runner }}
    needs:
      - check
      - resolve-version
    defaults:
      run:
        shell: ${{ matrix.os.shell }}
    env:
      VERSION: ${{ needs.resolve-version.outputs.version }}
      GH_USERNAME: ${{ github.actor }}
      GH_PASSWORD: ${{ github.token }}
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SECRET }}
      ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_SIGNING_KEY_ID }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_SIGNING_PASSWORD }}
      ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
      ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
    strategy:
      fail-fast: false
      matrix:
        repository:
          - name: Github Packages
            tasks: publishAllPublicationsToGitHubRepository
            enabled: ${{ github.event.inputs.skipGitHub != 'y' }}
          - name: Maven Central
            # `closeSonatypeStagingRepository` Requires to manually release a new version on https://s01.oss.sonatype.org/#stagingRepositories
            # If you're brave, you could change it to `closeAndReleaseSonatypeStagingRepository` to fully automate the release
            tasks: publishToSonatype closeAndReleaseSonatypeStagingRepository
            enabled: ${{ github.event.inputs.skipMavenCentral != 'y' }}
        os:
          - runner: macos-latest
            shell: bash
          - runner: windows-latest
            shell: msys2 {0}
          - runner: ubuntu-latest
            shell: bash
    steps:
      - uses: msys2/setup-msys2@v2
        if: ${{ matrix.repository.enabled == true && runner.os == 'Windows' }}
        with:
          release: false
          msystem: MINGW64
          update: true
          path-type: inherit
          install: >-
            mingw-w64-x86_64-curl
            curl

      - uses: actions/checkout@v3
        if: ${{ matrix.repository.enabled == true }}

      - uses: actions/setup-java@v3
        if: ${{ matrix.repository.enabled == true }}
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Restore Gradle cache
        if: ${{ matrix.repository.enabled == true }}
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Gradle Publish to ${{ matrix.repository.name }}
        if: ${{ matrix.repository.enabled == true }}
        run: ./gradlew ${{ matrix.repository.tasks }} -Pversion=${VERSION//v} --scan

  release-Dokka:
    runs-on: ubuntu-latest
    needs:
      - build-dokka
      - resolve-version
    if: ${{ github.event.inputs.skipPages != 'y' && needs.resolve-version.outputs.snapshot == 'false' }}
    env:
      VERSION: ${{ needs.resolve-version.outputs.version }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dokka

      - name: Build Dokka Pages
        run: |
          REPO_NAME=${{ github.repository }}
          REPO_NAME=${REPO_NAME#${{ github.repository_owner }}/}
          cp -avr build/dokka/htmlMultiModule/ public;
          find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\)$' -exec gzip -f -k {} \;
          echo "/${REPO_NAME} /${REPO_NAME}/${REPO_NAME}/index.html 301" > public/_redirects;
          echo "/${REPO_NAME}/index.html /${REPO_NAME}/${REPO_NAME}/index.html 301" >> public/_redirects;

      - uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ github.token }}
